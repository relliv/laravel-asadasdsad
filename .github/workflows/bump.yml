name: 'Bump Dependencies'

on:
    schedule:
        - cron: '0 0 * * *'
    workflow_dispatch:

jobs:
    update-deps:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest

        steps:
            - name: 🗂 Checkout Code
              uses: actions/checkout@v4

            - name: 🧩 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'

            - name: 📦 Install PNPM
              run: npm i pnpm -g

            - name: 🗃 Setup Cache Environment
              id: extcache
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: 8.2
                  extensions: bcmath
                  key: php_extensions_cache

            - name: 🗃 Cache Extensions
              uses: actions/cache@v4
              with:
                  path: ${{ steps.extcache.outputs.dir }}
                  key: ${{ steps.extcache.outputs.key }}
                  restore-keys: ${{ steps.extcache.outputs.key }}

            - name: 🐘 Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
                  extensions: bcmath

            - name: 🗄 Get Composer Cache Directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: 🗃 Cache Composer Dependencies
              uses: actions/cache@v4
              id: actions-cache
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: 🗂 Cache PHP Dependencies
              uses: actions/cache@v4
              id: vendor-cache
              with:
                  path: vendor
                  key: ${{ runner.OS }}-vendor-${{ hashFiles('**/composer.lock') }}

            - name: 🚀 Bump and Install Dependencies
              run: |
                  chmod +x ./.scripts/local/bump.sh
                  ./.scripts/local/bump.sh
              shell: bash

            - name: 🏗 Build Frontend with Vite
              run: pnpm build

            - name: 👤 Set up Git user
              run: |
                  git config --global user.name "${{ github.actor }}-ci-automation"
                  git config --global user.email "${{ env.GITHUB_GIT_EMAIL }}"

            - name: 🛠️ Update dependencies and create branch
              id: update-branch
              run: |
                  DATE=$(date +'%Y-%m-%d')
                  BRANCH_NAME="update/update-deps-$DATE"

                  # Check if branch exists
                  if git show-ref --quiet refs/heads/$BRANCH_NAME; then
                    echo "Branch $BRANCH_NAME already exists."
                  else
                    echo "Creating branch $BRANCH_NAME."
                    git checkout -b $BRANCH_NAME
                    git add package.json pnpm-lock.yaml
                    git commit -m "chore: update dependencies on $DATE"
                    git push origin $BRANCH_NAME
                  fi
                  echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

            - name: 🌿 Create Pull Request
              uses: actions/github-script@v7
              with:
                  script: |
                      const branchName = process.env.BRANCH_NAME;
                      const { repo, owner } = context.repo;

                      try {
                        // Create the pull request
                        const result = await github.rest.pulls.create({
                          title: `Update Dependencies [${branchName}]`,
                          owner,
                          repo,
                          head: branchName,
                          base: 'main',
                          body: [
                            'This PR is auto-generated by',
                            '[actions/github-script](https://github.com/actions/github-script).'
                          ].join('\n')
                        });

                        // Add labels to the pull request
                        await github.rest.issues.addLabels({
                          owner,
                          repo,
                          issue_number: result.data.number,
                          labels: ['dependency update', 'automated pr']
                        });
                      } catch (error) {
                        console.error('Failed to create PR:', error);
                        throw error;
                      }
